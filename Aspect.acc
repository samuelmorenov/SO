# 1 "MyAspect.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "MyAspect.c"
# 1 "Clock.h" 1




void Clock_Update();
int Clock_GetTime();
# 2 "MyAspect.c" 2
# 1 "Asserts.h" 1
# 9 "Asserts.h"
enum assertList {
 RMEM_OP=0
,RMEM_O1=1
,RMEM_O2=2
,AMEM_OP=3
,AMEM_O1=4
,AMEM_O2=5
,PC=6
,ACC=7
,IR_OP=8
,IR_O1=9
,IR_O2=10
,PSW=11
,MAR=12
,MBR_OP=13
,MBR_O1=14
,MBR_O2=15
,MMU_BS=16
,MMU_LM=17
,MMU_MAR=18
,MMEM_MAR=19
,MMBR_OP=20
,MMBR_O1=21
,MMBR_O2=22
,XPID=23
};

typedef struct {
 int time;
 int value;
 char element[8];
 int address;
} ASSERT_DATA;


 int Asserts_LoadAsserts();
 void Asserts_CheckAsserts();
 void Asserts_TerminateAssertions();

extern ASSERT_DATA asserts[500];
# 3 "MyAspect.c" 2


before(): execution(int Processor_FetchInstruction()) {
 Clock_Update();
}

after(): execution(void Processor_DecodeAndExecuteInstruction()){
    Asserts_CheckAsserts();
}

before(): execution(void OperatingSystem_InterruptLogic(int)){
 Clock_Update();
}
